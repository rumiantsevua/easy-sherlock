from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import telegram_bot_token
import logging
import asyncio
from googlesearch import search


bot = Bot(token=telegram_bot_token)
dp = Dispatcher()


async def main():
    await dp.start_polling(bot)


@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–ü—Ä–∏–≤—ñ—Ç üñêÔ∏è —Ü–µ —à—É–∫–∞—á —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ Easy-Sherlocküîç')
    await message.answer('‚ö°–ó–∞—Ä–∞–∑ –ë–æ—Ç –º–æ–∂–µ —à—É–∫–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à–∏—Ö 3 —Å–∞–π—Ç–∏ –≤ Google')
    await message.answer('‚úèÔ∏è–ù–∞–ø–∏—à–∏ —â–æ —Ç—Ä–µ–±–∞ –∑–Ω–∞–π—Ç–∏')


@dp.message()
async def echo(message: types.Message):
    global user_message
    user_message = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    await message.reply(f"üîç–í–∞—à –∑–∞–ø–∏—Ç: '{user_message}', —à—É–∫–∞—é...")
    search_info = search(user_message, num_results=3,
                         advanced=True, sleep_interval=1)
    for res in search_info:
        await message.reply(str(res.description))


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')
